{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\May\\\\Documents\\\\GitHub\\\\CIS-450-Project\\\\nfl\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      genres: [],\n      movies: [],\n      filters: [\"Player History\", \"Season\", \"Play Stats\", \"NFL Teams\", \"College Teams\", \"Hometown\"]\n    };\n    this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n  // componentDidMount() {\n  //   // Send an HTTP request to the server.\n  //   fetch(\"http://localhost:8081/genres\", {\n  //     method: 'GET' // The type of HTTP request.\n  //   })\n  //     .then(res => res.json()) // Convert the response data to a JSON.\n  //     .then(genreList => {\n  //       if (!genreList) return;\n  //       // Map each genreObj in genreList to an HTML element:\n  //       // A button which triggers the showMovies function for each genre.\n  //       let genreDivs = genreList.map((genreObj, i) =>\n  //         <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n  //       );\n  //       // Set the state of the genres list to the value returned by the HTTP response from the server.\n  //       this.setState({\n  //         genres: genreDivs\n  //       })\n  //     })\n  //     .catch(err => console.log(err))\t// Print the error if there is one.\n  // }\n\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()).then(topInGenreList => {\n      if (!topInGenreList) return;\n      console.log(topInGenreList);\n      let topInGenreDivs = topInGenreList.map((topMov, i) => /*#__PURE__*/React.createElement(DashboardMovieRow, {\n        title: topMov.title,\n        rating: topMov.rating,\n        votes: topMov.vote_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }));\n      this.setState({\n        movies: topInGenreDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Sort Player Stats by Category\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filters-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, this.state.filters)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 44\n      }\n    }, \"Player\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, \"Team\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, \"Hometown\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, this.state.filters.map(filter => /*#__PURE__*/React.createElement(FilterButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 51\n      }\n    }, filter)))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/May/Documents/GitHub/CIS-450-Project/nfl/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","genres","movies","filters","showMovies","bind","genre","fetch","method","then","res","json","topInGenreList","console","log","topInGenreDivs","map","topMov","i","title","rating","vote_count","setState","catch","err","render","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,OAAO,EAAC,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,YAA7B,EAA2C,WAA3C,EAAwD,eAAxD,EAAyE,UAAzE;AAHG,KAAb;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD,GAboD,CAerD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AACA;;;AACAD,EAAAA,UAAU,CAACE,KAAD,EAAQ;AAChBC,IAAAA,KAAK,CAAC,kCAAkCD,KAAnC,EAA0C;AAC7CE,MAAAA,MAAM,EAAE,KADqC,CAC/B;;AAD+B,KAA1C,CAAL,CAGKC,IAHL,CAGUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHjB,EAIKF,IAJL,CAIUG,cAAc,IAAI;AACtB,UAAI,CAACA,cAAL,EAAqB;AAErBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AAEA,UAAIG,cAAc,GAAGH,cAAc,CAACI,GAAf,CAAmB,CAACC,MAAD,EAASC,CAAT,kBACtC,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAED,MAAM,CAACE,KAAjC;AAAwC,QAAA,MAAM,EAAEF,MAAM,CAACG,MAAvD;AAA+D,QAAA,KAAK,EAAEH,MAAM,CAACI,UAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADmB,CAArB;AAIA,WAAKC,QAAL,CAAc;AACZpB,QAAAA,MAAM,EAAEa;AADI,OAAd;AAGD,KAhBL,EAiBKQ,KAjBL,CAiBWC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAjBlB;AAkBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzB,KAAL,CAAWG,OADd,CAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3B,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,CAFF,eAGE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB,CAHF,CADF,eAME;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,EAAE,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWG,OAAX,CAAmBa,GAAnB,CAAuBU,MAAM,iBAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,MAAf,CAAjC,CADH,CANF,CADF,CATF,CALF,CADF;AA8BD;;AA7FoD","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: [],\n      filters:[\"Player History\", \"Season\", \"Play Stats\", \"NFL Teams\", \"College Teams\", \"Hometown\"]\n    }\n\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  // componentDidMount() {\n  //   // Send an HTTP request to the server.\n  //   fetch(\"http://localhost:8081/genres\", {\n  //     method: 'GET' // The type of HTTP request.\n  //   })\n  //     .then(res => res.json()) // Convert the response data to a JSON.\n  //     .then(genreList => {\n  //       if (!genreList) return;\n  //       // Map each genreObj in genreList to an HTML element:\n  //       // A button which triggers the showMovies function for each genre.\n  //       let genreDivs = genreList.map((genreObj, i) =>\n  //         <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n  //       );\n\n  //       // Set the state of the genres list to the value returned by the HTTP response from the server.\n  //       this.setState({\n  //         genres: genreDivs\n  //       })\n  //     })\n  //     .catch(err => console.log(err))\t// Print the error if there is one.\n  // }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: 'GET' // The type of HTTP request.\n    }) \n        .then(res => res.json())\n        .then(topInGenreList => {\n          if (!topInGenreList) return;\n\n          console.log(topInGenreList);\n\n          let topInGenreDivs = topInGenreList.map((topMov, i) =>\n            <DashboardMovieRow title={topMov.title} rating={topMov.rating} votes={topMov.vote_count}/>\n          );\n\n          this.setState({\n            movies: topInGenreDivs\n          });\n        })\n        .catch(err => console.log(err))\n  }\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Sort Player Stats by Category</div>\n            <div className=\"filters-container\">\n              {this.state.filters}\n            </div>\n          </div>\n\n          <br></br>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Player</strong></div>\n                <div className=\"header\"><strong>Team</strong></div>\n                <div className=\"header\"><strong>Hometown</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.filters.map(filter=> (<FilterButton>{filter}</FilterButton>))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}