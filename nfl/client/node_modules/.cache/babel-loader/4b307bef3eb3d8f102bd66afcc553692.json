{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\May\\\\Desktop\\\\Fall-2020\\\\CIS-450\\\\Homework_2\\\\hw2\\\\hw2\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      genres: [],\n      movies: []\n    };\n    this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let genreDivs = genreList.map((genreObj, i) => /*#__PURE__*/React.createElement(GenreButton, {\n        id: \"button-\" + genreObj.genre,\n        onClick: () => this.showMovies(genreObj.genre),\n        genre: genreObj.genre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()).then(topInGenreList => {\n      if (!topInGenreList) return;\n      console.log(topInGenreList);\n      let topInGenreDivs = topInGenreList.map((topMov, i) => /*#__PURE__*/React.createElement(DashboardMovieRow, {\n        title: topMov.title,\n        rating: topMov.genre,\n        votes: topMov.vote_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }));\n      this.setState({\n        movies: topInGenreDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Top Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, this.state.genres)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 44\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, \"Rating\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, \"Vote Count\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, this.state.movies)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/May/Desktop/Fall-2020/CIS-450/Homework_2/hw2/hw2/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","genres","movies","showMovies","bind","componentDidMount","fetch","method","then","res","json","genreList","genreDivs","map","genreObj","i","genre","setState","catch","err","console","log","topInGenreList","topInGenreDivs","topMov","title","vote_count","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      genres: [],\n      movies: []\n    }\n\n    this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(genreList => {\n        if (!genreList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        let genreDivs = genreList.map((genreObj, i) =>\n          <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n        );\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          genres: genreDivs\n        })\n      })\n      .catch(err => console.log(err))\t// Print the error if there is one.\n  }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n    fetch(\"http://localhost:8081/genres/\" + genre, {\n      method: 'GET' // The type of HTTP request.\n    }) \n        .then(res => res.json())\n        .then(topInGenreList => {\n          if (!topInGenreList) return;\n\n          console.log(topInGenreList);\n\n          let topInGenreDivs = topInGenreList.map((topMov, i) =>\n            <DashboardMovieRow title={topMov.title} rating={topMov.genre} votes={topMov.vote_count}/>\n          );\n\n          this.setState({\n            movies: topInGenreDivs\n          });\n        })\n        .catch(err => console.log(err))\n  }\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n            <div className=\"h5\">Top Movies</div>\n            <div className=\"genres-container\">\n              {this.state.genres}\n            </div>\n          </div>\n\n          <br></br>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}